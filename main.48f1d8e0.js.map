{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","headRow","tHead","body","tBodies","makeComparator","first","second","idx","firstValue","children","innerText","secondValue","slice","split","join","test","Number","localeCompare","addEventListener","e","currentCell","currentColumn","target","cellIndex","sortedColumn","rows","sort","a","b","append"],"mappings":";AAAA,aAqBA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAnBA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAUH,EAAMI,MAChBC,EAAOL,EAAMM,QAAQ,GACrBC,EAAiB,SAACC,EAAOC,EAAQC,GACjCC,IAAAA,EAAaH,EAAMI,SAASF,GAAKG,UACjCC,EAAcL,EAAOG,SAASF,GAAKG,UAOnC,MALkB,MAAlBF,EAAW,KACbA,EAAaA,EAAWI,MAAM,GAAGC,MAAM,KAAKC,KAAK,IACjDH,EAAcA,EAAYC,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAGjD,QAAQC,KAAKP,GACRQ,OAAOR,GAAcQ,OAAOL,GAG9BH,EAAWS,cAAcN,IAGlCX,EAAQkB,iBAAiB,QAAS,SAAAC,GAC1BC,IACAC,EADcF,EAAEG,OACYC,UAC5BC,EAAmBtB,EAAAA,EAAKuB,MAE9BD,EAAaE,KAAK,SAACC,EAAGC,GAAMxB,OAAAA,EAAeuB,EAAGC,EAAGP,KACjDnB,EAAK2B,OAAL3B,MAAAA,EAAesB,EAAAA","file":"main.48f1d8e0.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst headRow = table.tHead;\nconst body = table.tBodies[0];\nconst makeComparator = (first, second, idx) => {\n  let firstValue = first.children[idx].innerText;\n  let secondValue = second.children[idx].innerText;\n\n  if (firstValue[0] === '$') {\n    firstValue = firstValue.slice(1).split(',').join('');\n    secondValue = secondValue.slice(1).split(',').join('');\n  }\n\n  if (/^\\d+$/.test(firstValue)) {\n    return Number(firstValue) - Number(secondValue);\n  }\n\n  return firstValue.localeCompare(secondValue);\n};\n\nheadRow.addEventListener('click', e => {\n  const currentCell = e.target;\n  const currentColumn = currentCell.cellIndex;\n  const sortedColumn = [...body.rows];\n\n  sortedColumn.sort((a, b) => makeComparator(a, b, currentColumn));\n  body.append(...sortedColumn);\n});\n"]}